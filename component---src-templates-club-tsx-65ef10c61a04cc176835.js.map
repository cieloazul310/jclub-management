{"version":3,"sources":["webpack:///./src/components/ClubInfo.tsx","webpack:///./src/templates/club.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","padding","spacing","ClubInfo","clubsYaml","classes","className","Typography","variant","component","gutterBottom","name","fullname","company","category","hometown","area","settlement","href","color","target","rel","relatedCompanies","join","ClubTemplate","props","data","TemplateLayout","mode","title","headerTitle","description","Container","maxWidth","query"],"mappings":"kOAMMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAASH,EAAMI,QAAQ,EAAG,SAoCjBC,MA3Bf,YAAwC,IAApBC,EAAoB,EAApBA,UACZC,EAAUT,IAChB,OACE,uBAAKU,UAAWD,EAAQL,MACtB,gBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,GACjDN,aADH,EACGA,EAAWO,MAEd,gBAACJ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,MACpC,mCAAWL,aAAX,EAAWA,EAAWQ,UACtB,kCAAUR,aAAV,EAAUA,EAAWS,SACrB,qCAAaT,aAAb,EAAaA,EAAWU,UACxB,qCAAaV,aAAb,EAAaA,EAAWW,UACxB,mCAAWX,aAAX,EAAWA,EAAWY,OACrBZ,aAAA,EAAAA,EAAWa,YACV,kCACQ,IACN,gBAAC,IAAD,CAASC,KAAMd,EAAUa,WAAYE,MAAM,YAAYC,OAAO,SAASC,IAAI,uBACxEjB,EAAUa,aAGb,MACHb,aAAA,EAAAA,EAAWkB,kBAAmB,qCAAalB,EAAUkB,iBAAiBC,KAAK,OAAc,QCfnFC,UAjBf,SAAsBC,GAAsD,IAClErB,EAAcqB,EAAMC,KAApBtB,UACR,OACE,gBAACuB,EAAA,EAAD,eACEC,KAAK,OACLC,OAAUzB,aAAL,EAAKA,EAAWO,MAAhB,QACLmB,YAAW,IAAK1B,aAAL,EAAKA,EAAWO,MAC3BoB,aAAgB3B,aAAL,EAAKA,EAAWQ,UAAhB,qDACPa,GAEJ,gBAACO,EAAA,EAAD,CAAWC,SAAS,MAClB,gBAAC,EAAD,CAAU7B,UAAWA,OAMdoB,IAEFU,EAAQ","file":"component---src-templates-club-tsx-65ef10c61a04cc176835.js","sourcesContent":["import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MuiLink from '@material-ui/core/Link';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { ClubTemplateQuery } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2, 0),\n    },\n  })\n);\n\ninterface Props {\n  clubsYaml: ClubTemplateQuery['clubsYaml'];\n}\n\nfunction ClubInfo({ clubsYaml }: Props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n        {clubsYaml?.name}\n      </Typography>\n      <Typography variant=\"body1\" component=\"ul\">\n        <li>正式名称: {clubsYaml?.fullname}</li>\n        <li>法人名: {clubsYaml?.company}</li>\n        <li>所属カテゴリ: {clubsYaml?.category}</li>\n        <li>ホームタウン: {clubsYaml?.hometown}</li>\n        <li>活動区域: {clubsYaml?.area}</li>\n        {clubsYaml?.settlement ? (\n          <li>\n            経営情報:{' '}\n            <MuiLink href={clubsYaml.settlement} color=\"secondary\" target=\"_blank\" rel=\"noopener noreferrer\">\n              {clubsYaml.settlement}\n            </MuiLink>\n          </li>\n        ) : null}\n        {clubsYaml?.relatedCompanies ? <li>関連する法人: {clubsYaml.relatedCompanies.join(', ')}</li> : null}\n      </Typography>\n    </div>\n  );\n}\n\nexport default ClubInfo;\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport Container from '@material-ui/core/Container';\nimport TemplateLayout from '../layout/TemplateLayout';\nimport ClubInfo from '../components/ClubInfo';\nimport { ClubTemplateQuery, SitePageContext } from '../../graphql-types';\n\nfunction ClubTemplate(props: PageProps<ClubTemplateQuery, SitePageContext>) {\n  const { clubsYaml } = props.data;\n  return (\n    <TemplateLayout\n      mode=\"club\"\n      title={`${clubsYaml?.name}の経営情報`}\n      headerTitle={`${clubsYaml?.name}`}\n      description={`${clubsYaml?.fullname}の年度別経営情報一覧。損益計算書・貸借対照表・営業収入・営業費用・入場者数を項目ごとに時系列表示。`}\n      {...props}\n    >\n      <Container maxWidth=\"md\">\n        <ClubInfo clubsYaml={clubsYaml} />\n      </Container>\n    </TemplateLayout>\n  );\n}\n\nexport default ClubTemplate;\n\nexport const query = graphql`\n  query ClubTemplate($slug: String!) {\n    clubsYaml(slug: { eq: $slug }) {\n      id\n      short_name\n      name\n      fullname\n      category\n      slug\n      company\n      hometown\n      area\n      settlement\n      relatedCompanies\n    }\n    allDataset(filter: { slug: { eq: $slug } }, sort: { fields: year }) {\n      edges {\n        node {\n          academy_exp\n          academy_rev\n          acl_attd\n          acl_games\n          all_attd\n          all_games\n          broadcast\n          assets\n          capital_stock\n          capital_surplus\n          category\n          curr_assets\n          curr_liabilities\n          expense\n          fixed_assets\n          fixed_liabilities\n          fullname\n          game_exp\n          general_exp\n          goods_exp\n          goods_rev\n          id\n          league_attd\n          league_games\n          leaguecup_attd\n          leaguecup_games\n          liabilities\n          license\n          manage_exp\n          name\n          net_worth\n          no_exp\n          no_rev\n          op_profit\n          ordinary_profit\n          other_revs\n          po_attd\n          po_games\n          points\n          ppg\n          profit\n          profit_before_tax\n          related_revenue\n          rank\n          retained_earnings\n          revenue\n          salary\n          second_attd\n          second_games\n          sga\n          slug\n          sp_exp\n          sp_rev\n          sponsor\n          tax\n          team_exp\n          ticket\n          women_exp\n          year\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}