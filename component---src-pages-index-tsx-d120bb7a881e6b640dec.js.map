{"version":3,"sources":["webpack:///./src/layout/index.tsx","webpack:///./src/components/links/CategoryLink.tsx","webpack:///./src/components/links/YearsLink.tsx","webpack:///./src/pages/index.tsx"],"names":["iOS","window","test","navigator","userAgent","useStyles","makeStyles","theme","createStyles","appbar","background","palette","type","common","black","undefined","color","white","content","paddingTop","breakpoints","only","fab","position","bottom","spacing","right","Layout","children","drawerContents","title","description","headerTitle","classes","trigger","useScrollTrigger","React","drawerOpen","setDrawerOpen","_setDrawer","open","_toggleDrawer","appear","direction","in","className","onLeftButtonClick","onClose","onOpen","disableBackdropTransition","disableDiscovery","onCloseIconClick","onClick","CategoryLinkCore","clubs","map","index","node","Button","key","id","component","GatsbyLink","to","slug","short_name","J1Link","useJ1Clubs","J2Link","useJ2Clubs","J3Link","useJ3Clubs","YearsLink","years","useAllYears","year","IndexPage","useSiteMetadata","Container","maxWidth","Typography","variant","gutterBottom","paragraph","AppLink","Grid","container","item","xs","sm","Attribution"],"mappings":"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","file":"component---src-pages-index-tsx-d120bb7a881e6b640dec.js","sourcesContent":["import * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Fab from '@material-ui/core/Fab';\nimport Slide from '@material-ui/core/Slide';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SEO from './SEO';\nimport AppBarInner from './AppBarInner';\nimport DrawerInner from './DrawerInner';\nimport Footer from './Footer';\n\nconst iOS = typeof window !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    appbar: {\n      background: theme.palette.type === 'dark' ? theme.palette.common.black : undefined,\n      color: theme.palette.type === 'dark' ? theme.palette.common.white : undefined,\n    },\n    content: {\n      paddingTop: 64,\n      [theme.breakpoints.only('xs')]: {\n        paddingTop: 56,\n      },\n    },\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  })\n);\n\ninterface Props {\n  children: JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  drawerContents?: JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  title?: string;\n  description?: string;\n  headerTitle?: string;\n}\n\nfunction Layout({ children, drawerContents, title, description, headerTitle }: Props) {\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const _setDrawer = (open: boolean) => () => {\n    setDrawerOpen(open);\n  };\n  const _toggleDrawer = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  return (\n    <div>\n      <SEO title={title} description={description} />\n      <Slide appear={false} direction=\"down\" in={!trigger}>\n        <AppBar className={classes.appbar}>\n          <AppBarInner title={headerTitle || title} onLeftButtonClick={_toggleDrawer} />\n        </AppBar>\n      </Slide>\n      <div className={classes.content}>\n        <main>{children}</main>\n      </div>\n      <Footer />\n      <SwipeableDrawer\n        open={drawerOpen}\n        onClose={_setDrawer(false)}\n        onOpen={_setDrawer(true)}\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n      >\n        <DrawerInner onCloseIconClick={_setDrawer(false)} drawerContents={drawerContents} />\n      </SwipeableDrawer>\n      <div className={classes.fab}>\n        <Tooltip title=\"メニュー\">\n          <Fab color=\"secondary\" onClick={_toggleDrawer}>\n            <MenuIcon />\n          </Fab>\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport Button from '@material-ui/core/Button';\n\nimport { useJ1Clubs, useJ2Clubs, useJ3Clubs, Clubs } from '../../utils/graphql-hooks';\n\ninterface Props {\n  category: string;\n}\n\nexport function CategoryLink({ category }: Props) {\n  return category === 'J1' ? <J1Link /> : category === 'J2' ? <J2Link /> : category === 'J3' ? <J3Link /> : null;\n}\n\ninterface CategoryLinkCoreProps {\n  clubs: Clubs;\n}\n\nexport function CategoryLinkCore({ clubs }: CategoryLinkCoreProps) {\n  return (\n    <>\n      {clubs.map(({ node }, index) => (\n        <Button key={node.id ?? index} component={GatsbyLink} to={`/club/${node.slug}/`}>\n          {node.short_name}\n        </Button>\n      ))}\n    </>\n  );\n}\n\nexport function J1Link() {\n  const clubs = useJ1Clubs();\n  return <CategoryLinkCore clubs={clubs} />;\n}\n\nexport function J2Link() {\n  const clubs = useJ2Clubs();\n  return <CategoryLinkCore clubs={clubs} />;\n}\n\nexport function J3Link() {\n  const clubs = useJ3Clubs();\n  return <CategoryLinkCore clubs={clubs} />;\n}\n","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport Button from '@material-ui/core/Button';\nimport { useAllYears } from '../../utils/graphql-hooks';\n\nexport function YearsLink() {\n  const years = useAllYears();\n  return (\n    <>\n      {years.map(({ year }, index) => (\n        <Button key={year ?? index} component={GatsbyLink} to={`/year/${year}/`}>\n          {year}\n        </Button>\n      ))}\n    </>\n  );\n}\n\nexport default YearsLink;\n","import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport Layout from '../layout';\nimport AppLink from '../components/AppLink';\nimport { ContentBasis, ContentBasisLarge } from '../components/Basis';\nimport { J1Link, J2Link, J3Link, YearsLink } from '../components/links';\nimport AttributionDoc from '../components/docs/Attribution';\nimport { useSiteMetadata } from '../utils/graphql-hooks';\n\nfunction IndexPage() {\n  const { title, description } = useSiteMetadata();\n\n  return (\n    <Layout title={title}>\n      <Container maxWidth=\"md\">\n        <ContentBasisLarge>\n          <Typography variant=\"h3\" component=\"h2\" gutterBottom>\n            {title}\n          </Typography>\n          <ContentBasis>\n            <Typography paragraph>{description}</Typography>\n            <Typography paragraph>\n              <AppLink to=\"/year/2019\">最新の経営情報を見る</AppLink>\n            </Typography>\n          </ContentBasis>\n          <ContentBasis>\n            <Grid container component=\"nav\">\n              <Grid item xs={12} sm={3}>\n                <ContentBasis>\n                  <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                    J1\n                  </Typography>\n                  <J1Link />\n                </ContentBasis>\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <ContentBasis>\n                  <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                    J2\n                  </Typography>\n                  <J2Link />\n                </ContentBasis>\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <ContentBasis>\n                  <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                    J3\n                  </Typography>\n                  <J3Link />\n                </ContentBasis>\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <ContentBasis>\n                  <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                    年度別\n                  </Typography>\n                  <YearsLink />\n                </ContentBasis>\n              </Grid>\n            </Grid>\n          </ContentBasis>\n          <footer>\n            <ContentBasisLarge>\n              <AttributionDoc />\n            </ContentBasisLarge>\n          </footer>\n        </ContentBasisLarge>\n      </Container>\n    </Layout>\n  );\n}\nexport default IndexPage;\n"],"sourceRoot":""}